@page
@model Cashier_System.Pages.StoreModel
@{
    ViewData["Title"] = "Store";
}


<script src="https://cdnjs.cloudflare.com/ajax/libs/exceljs/3.3.1/exceljs.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/1.3.8/FileSaver.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/babel-polyfill/7.4.0/polyfill.min.js"></script>
<script>
    function u() {
        var x = document.getElementById('p');
        $.ajax(
            {
                type: "POST",
                url: "/bills/uploadphoto",
                data: { file: x },
                datatype: "json",

            }

        )
       
    };

</script>


@inject UserManager<IdentityUser> UserManager
@(Html.DevExtreme().DataGrid<Cashier_System.Models.Product>
    ()
    .DataSource(ds => ds.Mvc()
    .Controller("Store")
    .LoadAction("Get")
    .UpdateAction("Updateproduct").
    InsertAction("post").DeleteAction("Delete")
    .Key("Id")
    )
    .Export(e => e.Enabled(true))
    .ShowBorders(true)
    .OnExporting("exporting")
    .SearchPanel(s => s
    .Visible(true)
    .Placeholder("اكتب لنبدء البحث ")
    .Width(300)
    .HighlightCaseSensitive(true)
    )

    .RtlEnabled(true)
    .RemoteOperations(true)
    .Columns(columns => {



        columns.AddFor(m => m.Name).AllowSearch(true);

        columns.AddFor(m => m.Quantity).AllowSearch(true);

        columns.AddFor(m => m.PurchasingPrice);

        columns.AddFor(m => m.SellingPrice);
        
        columns.AddFor(m => m.photo)
               .Width(150)
               .AllowFixing(true)
               .AllowResizing(true)
               .AllowFiltering(false)
               .AllowSorting(false)
    .DataField("File").EditCellTemplate(@<text>
    @(Html.DevExtreme().FileUploader()
        .Name("Photo")
        .
        UploadUrl(Url.Action("Post", "Photo"))
    )
</text>);

})
        .Editing(e =>
        {
            e.Mode(GridEditMode.Popup).Popup(p => p
                     .Title("Product")
                     .ShowTitle(true)
                     .Width(700)
                     .Height(510)
                     );
            e.AllowAdding(true);
            e.AllowUpdating(true);
            e.AllowDeleting(true);
            e.UseIcons(true);
        }


    )
    )
<script>
    function exporting(e) {
        var workbook = new ExcelJS.Workbook();
        var worksheet = workbook.addWorksheet('Employees');

        DevExpress.excelExporter.exportDataGrid({
            component: e.component,
            worksheet: worksheet,
            autoFilterEnabled: true
        }).then(function () {
            workbook.xlsx.writeBuffer().then(function (buffer) {
                saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'Product.xlsx');
            });
        });
        e.cancel = true;
    }
</script>
<script>
    function fileUploader_valueChanged(e) {
        var key = e.element.attr('data-id');
        e.component.option('uploadUrl', '/Home/UploadFile?key=' + key);
    } 

</script>
